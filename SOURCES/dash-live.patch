diff --git a/libavformat/dashdec.c b/libavformat/dashdec.c
index f82a750d6f..ba6e227231 100644
--- a/libavformat/dashdec.c
+++ b/libavformat/dashdec.c
@@ -1396,15 +1396,9 @@ static int64_t calc_cur_seg_no(AVFormatContext *s, struct representation *pls)
             else
                 num += pls->first_seq_no;
         } else if (pls->fragment_duration){
-            av_log(s, AV_LOG_TRACE, "in fragment_duration mode fragment_timescale = %"PRId64", presentation_timeoffset = %"PRId64"\n", pls->fragment_timescale, pls->presentation_timeoffset);
+            av_log(s, AV_LOG_TRACE, "in fragment_duration mode fragment_timescale = %"PRId64", presentation_timeoffset = %"PRId64", fragment_duration = %"PRId64", first_seq_no = %"PRId64", availability_start_time = %"PRId64", availability_end_time = %"PRId64", publish_time = %"PRId64", time_shift_buffer_depth = %"PRId64", suggested_presentation_delay = %"PRId64", min_buffer_time = %"PRId64"\n", pls->fragment_timescale, pls->presentation_timeoffset, pls->fragment_duration, pls->first_seq_no, c->availability_start_time, c->availability_end_time, c->publish_time, c->time_shift_buffer_depth, c->suggested_presentation_delay, c->min_buffer_time);
             if (pls->presentation_timeoffset) {
                 num = pls->first_seq_no + (((get_current_time_in_sec() - c->availability_start_time) * pls->fragment_timescale)-pls->presentation_timeoffset) / pls->fragment_duration - c->min_buffer_time;
-            } else if (c->publish_time > 0 && !c->availability_start_time) {
-                if (c->min_buffer_time) {
-                    num = pls->first_seq_no + (((c->publish_time + pls->fragment_duration) - c->suggested_presentation_delay) * pls->fragment_timescale) / pls->fragment_duration - c->min_buffer_time;
-                } else {
-                    num = pls->first_seq_no + (((c->publish_time - c->time_shift_buffer_depth + pls->fragment_duration) - c->suggested_presentation_delay) * pls->fragment_timescale) / pls->fragment_duration;
-                }
             } else {
                 num = pls->first_seq_no + (((get_current_time_in_sec() - c->availability_start_time) - c->suggested_presentation_delay) * pls->fragment_timescale) / pls->fragment_duration;
             }
@@ -1447,7 +1441,7 @@ static int64_t calc_max_seg_no(struct representation *pls, DASHContext *c)
             }
         }
     } else if (c->is_live && pls->fragment_duration) {
-        num = pls->first_seq_no + (((get_current_time_in_sec() - c->availability_start_time)) * pls->fragment_timescale)  / pls->fragment_duration;
+        num = pls->first_seq_no + (((get_current_time_in_sec() - c->availability_start_time - c->min_buffer_time)) * pls->fragment_timescale)  / pls->fragment_duration;
     } else if (pls->fragment_duration) {
         num = pls->first_seq_no + (c->media_presentation_duration * pls->fragment_timescale) / pls->fragment_duration;
     }
@@ -1627,6 +1621,7 @@ static struct fragment *get_current_fragment(struct representation *pls)
             pls->cur_seq_no = calc_cur_seg_no(pls->parent, pls);
         } else if (pls->cur_seq_no > max_seq_no) {
             av_log(pls->parent, AV_LOG_VERBOSE, "new fragment: min[%"PRId64"] max[%"PRId64"], playlist %d\n", min_seq_no, max_seq_no, (int)pls->rep_idx);
+            pls->cur_seq_no = max_seq_no;
         }
         seg = av_mallocz(sizeof(struct fragment));
         if (!seg) {
